{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumenty\\\\JS\\\\JS\\\\odc5_gra\\\\CardGame\\\\src\\\\cards\\\\cardBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './cardBoard.css';\nimport Card from './card.js';\nimport Counter from '../counter.js';\nimport SortCards from './sortCards.js';\nimport hogward from './img/hogwards.jpg';\nimport harry from './img/harry.jpg';\nimport ron from './img/ron.jpg';\nimport hermione from './img/hermione.jpg';\nimport dumpledore from './img/dumbledore.jpg';\nimport voldemort from './img/voldemort.jpg';\nimport dobby from './img/dobby.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardsBoard = props => {\n  _s();\n  const [counter, setScore] = useState(0);\n  //const [disableState, setState] = useState(false);\n\n  const numberOfCards = props.items.length * 2;\n  const characters = props.items;\n  let board = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There is not enough cards to display.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 17\n  }, this);\n  let score = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score\",\n    children: \"Turn counter: 0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }, this);\n  const [boardSorted, setArrayVal] = useState(SortCards(characters, numberOfCards));\n  const [visibleItems, setVisibleItem] = useState([]);\n  console.log('boardSorted', boardSorted);\n  const compareCards = (card1, card2) => {\n    //console.log(boardSorted[card1].character);\n\n    if (boardSorted[card1].character == boardSorted[card2].character) {\n      console.log('point!');\n      setScore(counter + 1);\n      return true;\n    }\n    return false;\n  };\n  const SetSrc = image => {\n    switch (image) {\n      case 'harry':\n        image = harry;\n        break;\n      case 'ron':\n        image = ron;\n        break;\n      case 'hermione':\n        image = hermione;\n        break;\n      case 'dumpledore':\n        image = dumpledore;\n        break;\n      case 'voldemort':\n        image = voldemort;\n        break;\n      case 'dobby':\n        image = dobby;\n        break;\n      default:\n        image = hogward;\n    }\n    return image;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [boardSorted.map(element => /*#__PURE__*/_jsxDEV(Card, {\n      id: element.id,\n      character: element.character,\n      disable: element.disable,\n      onClick: () => {\n        if (!element.disable) {\n          switch (visibleItems.length) {\n            case 0:\n              {\n                setVisibleItem([element.id]);\n              }\n              break;\n            case 1:\n              {\n                if (visibleItems[0] != element.id) {\n                  setVisibleItem(visibleItems.concat(element.id));\n                  if (compareCards(visibleItems[0], element.id)) {\n                    element.disable = true;\n                    boardSorted[visibleItems[0]].disable = true;\n                  }\n                }\n              }\n              break;\n            case 2:\n              {\n                setVisibleItem([element.id]);\n              }\n              break;\n            default:\n              setVisibleItem([]);\n          }\n        }\n      },\n      imgSource: SetSrc(element.character)\n    }, element.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Counter, {\n      score: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this);\n};\n_s(CardsBoard, \"LYOUDl9QaQ8HNhcz2z9F1nv3MV0=\");\n_c = CardsBoard;\nexport default CardsBoard;\nvar _c;\n$RefreshReg$(_c, \"CardsBoard\");","map":{"version":3,"names":["React","useState","Card","Counter","SortCards","hogward","harry","ron","hermione","dumpledore","voldemort","dobby","CardsBoard","props","counter","setScore","numberOfCards","items","length","characters","board","score","boardSorted","setArrayVal","visibleItems","setVisibleItem","console","log","compareCards","card1","card2","character","SetSrc","image","map","element","id","disable","concat"],"sources":["D:/Dokumenty/JS/JS/odc5_gra/CardGame/src/cards/cardBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './cardBoard.css';\r\nimport Card from './card.js';\r\nimport Counter from '../counter.js';\r\nimport SortCards from './sortCards.js'\r\n\r\nimport hogward from './img/hogwards.jpg'\r\nimport harry from './img/harry.jpg'\r\nimport ron from './img/ron.jpg'\r\nimport hermione from './img/hermione.jpg'\r\nimport dumpledore from './img/dumbledore.jpg'\r\nimport voldemort from './img/voldemort.jpg'\r\nimport dobby from './img/dobby.jpg'\r\n\r\n\r\n\r\nconst CardsBoard = (props) => {\r\n\r\n    const [counter, setScore] = useState(0);\r\n    //const [disableState, setState] = useState(false);\r\n\r\n    const numberOfCards = props.items.length * 2;\r\n    const characters = props.items;\r\n    let board = <p>There is not enough cards to display.</p>;\r\n    let score = <div className='score'>Turn counter: 0</div>;\r\n\r\n    const [boardSorted, setArrayVal] = useState(SortCards(characters, numberOfCards));\r\n    const [visibleItems, setVisibleItem] = useState([]);\r\n    \r\n    console.log('boardSorted', boardSorted);\r\n\r\n    \r\n\r\n    const compareCards = (card1, card2) => {\r\n        //console.log(boardSorted[card1].character);\r\n        \r\n        if (boardSorted[card1].character == boardSorted[card2].character) {\r\n            console.log('point!');\r\n            setScore(counter + 1);\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n        \r\n    const SetSrc = (image) => {\r\n        switch (image){\r\n            case 'harry':\r\n                image = harry;             \r\n                break;\r\n            case 'ron':\r\n                image = ron; \r\n                break;\r\n            case 'hermione':\r\n                image = hermione; \r\n                break;\r\n            case 'dumpledore':\r\n                image = dumpledore; \r\n                break;\r\n            case 'voldemort':\r\n                image = voldemort; \r\n                break;\r\n            case 'dobby':\r\n                image = dobby; \r\n                break;\r\n            default:\r\n                image = hogward;\r\n        }\r\n        return image;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (<div className='board'>\r\n        {boardSorted.map((element) => (\r\n            <Card\r\n                key={element.id}\r\n                id={element.id}\r\n                character={element.character}\r\n                disable={element.disable}\r\n                onClick={()=>{\r\n                    if (!element.disable) {\r\n                        switch (visibleItems.length){\r\n                            case 0: \r\n                            {\r\n                                setVisibleItem([element.id]);\r\n                            }\r\n                                break;\r\n                            case 1:\r\n                            {\r\n                                if (visibleItems[0] != element.id) {\r\n                                    setVisibleItem(visibleItems.concat(element.id));\r\n                                    if (compareCards(visibleItems[0], element.id)) {\r\n                                        element.disable = true;\r\n                                        boardSorted[visibleItems[0]].disable = true;\r\n                                    }\r\n                                }\r\n                                \r\n                            }\r\n                                break;\r\n                            case 2:\r\n                            {\r\n                                setVisibleItem([element.id]);\r\n                            }\r\n                                break;\r\n                            default:\r\n                                setVisibleItem(([]));\r\n                        }\r\n                    }\r\n                    \r\n                }}\r\n                imgSource = {SetSrc(element.character)}\r\n            />))}\r\n        <Counter score={counter}></Counter>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default CardsBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,KAAK,MAAM,iBAAiB;AAAA;AAInC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAA;EAE1B,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC;;EAEA,MAAMe,aAAa,GAAGH,KAAK,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC;EAC5C,MAAMC,UAAU,GAAGN,KAAK,CAACI,KAAK;EAC9B,IAAIG,KAAK,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA4C;EACxD,IAAIC,KAAK,gBAAG;IAAK,SAAS,EAAC,OAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAsB;EAExD,MAAM,CAACC,WAAW,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACG,SAAS,CAACe,UAAU,EAAEH,aAAa,CAAC,CAAC;EACjF,MAAM,CAACQ,YAAY,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAEnDyB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,WAAW,CAAC;EAIvC,MAAMM,YAAY,GAAG,CAACC,KAAK,EAAEC,KAAK,KAAK;IACnC;;IAEA,IAAIR,WAAW,CAACO,KAAK,CAAC,CAACE,SAAS,IAAIT,WAAW,CAACQ,KAAK,CAAC,CAACC,SAAS,EAAE;MAC9DL,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrBZ,QAAQ,CAACD,OAAO,GAAG,CAAC,CAAC;MACrB,OAAO,IAAI;IACf;IAEA,OAAO,KAAK;EAChB,CAAC;EAGD,MAAMkB,MAAM,GAAIC,KAAK,IAAK;IACtB,QAAQA,KAAK;MACT,KAAK,OAAO;QACRA,KAAK,GAAG3B,KAAK;QACb;MACJ,KAAK,KAAK;QACN2B,KAAK,GAAG1B,GAAG;QACX;MACJ,KAAK,UAAU;QACX0B,KAAK,GAAGzB,QAAQ;QAChB;MACJ,KAAK,YAAY;QACbyB,KAAK,GAAGxB,UAAU;QAClB;MACJ,KAAK,WAAW;QACZwB,KAAK,GAAGvB,SAAS;QACjB;MACJ,KAAK,OAAO;QACRuB,KAAK,GAAGtB,KAAK;QACb;MACJ;QACIsB,KAAK,GAAG5B,OAAO;IAAC;IAExB,OAAO4B,KAAK;EAChB,CAAC;EAKD,oBAAQ;IAAK,SAAS,EAAC,OAAO;IAAA,WACzBX,WAAW,CAACY,GAAG,CAAEC,OAAO,iBACrB,QAAC,IAAI;MAED,EAAE,EAAEA,OAAO,CAACC,EAAG;MACf,SAAS,EAAED,OAAO,CAACJ,SAAU;MAC7B,OAAO,EAAEI,OAAO,CAACE,OAAQ;MACzB,OAAO,EAAE,MAAI;QACT,IAAI,CAACF,OAAO,CAACE,OAAO,EAAE;UAClB,QAAQb,YAAY,CAACN,MAAM;YACvB,KAAK,CAAC;cACN;gBACIO,cAAc,CAAC,CAACU,OAAO,CAACC,EAAE,CAAC,CAAC;cAChC;cACI;YACJ,KAAK,CAAC;cACN;gBACI,IAAIZ,YAAY,CAAC,CAAC,CAAC,IAAIW,OAAO,CAACC,EAAE,EAAE;kBAC/BX,cAAc,CAACD,YAAY,CAACc,MAAM,CAACH,OAAO,CAACC,EAAE,CAAC,CAAC;kBAC/C,IAAIR,YAAY,CAACJ,YAAY,CAAC,CAAC,CAAC,EAAEW,OAAO,CAACC,EAAE,CAAC,EAAE;oBAC3CD,OAAO,CAACE,OAAO,GAAG,IAAI;oBACtBf,WAAW,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC,CAACa,OAAO,GAAG,IAAI;kBAC/C;gBACJ;cAEJ;cACI;YACJ,KAAK,CAAC;cACN;gBACIZ,cAAc,CAAC,CAACU,OAAO,CAACC,EAAE,CAAC,CAAC;cAChC;cACI;YACJ;cACIX,cAAc,CAAE,EAAE,CAAE;UAAC;QAEjC;MAEJ,CAAE;MACF,SAAS,EAAIO,MAAM,CAACG,OAAO,CAACJ,SAAS;IAAE,GAnClCI,OAAO,CAACC,EAAE;MAAA;MAAA;MAAA;IAAA,QAoChB,CAAC,eACR,QAAC,OAAO;MAAC,KAAK,EAAEtB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAW;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AACV,CAAC;AAAA,GArGKF,UAAU;AAAA,KAAVA,UAAU;AAwGhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}