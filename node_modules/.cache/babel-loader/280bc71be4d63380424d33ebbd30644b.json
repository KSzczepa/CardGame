{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumenty\\\\JS\\\\JS\\\\odc5_gra\\\\CardGame\\\\src\\\\cards\\\\cardBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './cardBoard.css';\nimport Card from './card.js';\nimport Counter from '../counter.js';\nimport SortCards from './sortCards.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardsBoard = props => {\n  _s();\n  //const [counter, setScore] = useState(0);\n  const [disableState, setState] = useState(false);\n  const aaa = () => {\n    console.log('clickeddddd');\n  };\n  const numberOfCards = props.items.length * 2;\n  const characters = props.items;\n  let board = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"There is not enough cards to display.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 17\n  }, this);\n  let firstHero = null;\n  let counter = 0;\n  let score = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score\",\n    children: \"Turn counter: 0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }, this);\n  let contCards = 0;\n  const [boardSorted, setArrayVal] = useState(SortCards(characters, numberOfCards));\n  const [visibleItems, setVisibleItem] = useState([]);\n  console.log('boardSorted', boardSorted);\n  const compareCards = (card1, card2) => {\n    //console.log(boardSorted[card1].character);\n    counter++;\n    if (boardSorted[card1].character == boardSorted[card2].character) {\n      console.log('point!');\n    }\n  };\n  if (numberOfCards != 0) {\n\n    /*   board = boardSorted.map((element) => (\r\n          <Card\r\n              key={element.id}\r\n              id={element.id}\r\n              character={element.character}\r\n              disable={element.disable}\r\n              clickedCard={clickedCardHandler}\r\n              onClick={aaa}\r\n          />)) */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [boardSorted.map(element => /*#__PURE__*/_jsxDEV(Card, {\n      id: element.id,\n      character: element.character,\n      disable: element.disable,\n      onClick: () => {\n        switch (visibleItems.length) {\n          case 0:\n            {\n              setVisibleItem([element.id]);\n            }\n            break;\n          case 1:\n            {\n              if (visibleItems[0] != element.id) {\n                setVisibleItem(visibleItems.concat(element.id));\n                compareCards(visibleItems[0], element.id);\n              }\n            }\n            break;\n          case 2:\n            {\n              setVisibleItem([element.id]);\n            }\n            break;\n          default:\n            setVisibleItem([]);\n        }\n      }\n      /* imgSource = {SetSrc(element.character)} */\n    }, element.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Counter, {\n      score: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this);\n};\n_s(CardsBoard, \"J5kwzQjGJMJz96Cj6FGDSSoWW6o=\");\n_c = CardsBoard;\nexport default CardsBoard;\nvar _c;\n$RefreshReg$(_c, \"CardsBoard\");","map":{"version":3,"names":["React","useState","Card","Counter","SortCards","CardsBoard","props","disableState","setState","aaa","console","log","numberOfCards","items","length","characters","board","firstHero","counter","score","contCards","boardSorted","setArrayVal","visibleItems","setVisibleItem","compareCards","card1","card2","character","map","element","id","disable","concat"],"sources":["D:/Dokumenty/JS/JS/odc5_gra/CardGame/src/cards/cardBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './cardBoard.css';\r\nimport Card from './card.js';\r\nimport Counter from '../counter.js';\r\nimport SortCards from './sortCards.js'\r\n\r\n\r\n\r\n\r\nconst CardsBoard = (props) => {\r\n\r\n    //const [counter, setScore] = useState(0);\r\n    const [disableState, setState] = useState(false);\r\n\r\n    const aaa = () => {\r\n        console.log('clickeddddd');\r\n    }\r\n    \r\n\r\n    const numberOfCards = props.items.length * 2;\r\n    const characters = props.items;\r\n    let board = <p>There is not enough cards to display.</p>;\r\n    let firstHero = null;\r\n    let counter = 0;\r\n    let score = <div className='score'>Turn counter: 0</div>;\r\n    let contCards = 0;\r\n\r\n    const [boardSorted, setArrayVal] = useState(SortCards(characters, numberOfCards));\r\n    const [visibleItems, setVisibleItem] = useState([]);\r\n    \r\n    console.log('boardSorted', boardSorted);\r\n\r\n    \r\n\r\n    const compareCards = (card1, card2) => {\r\n        //console.log(boardSorted[card1].character);\r\n        counter++;\r\n        if (boardSorted[card1].character == boardSorted[card2].character) {\r\n            console.log('point!');\r\n        }\r\n        \r\n    }\r\n    \r\n        \r\n   \r\n\r\n\r\n    if (numberOfCards != 0) {\r\n            \r\n\r\n      /*   board = boardSorted.map((element) => (\r\n            <Card\r\n                key={element.id}\r\n                id={element.id}\r\n                character={element.character}\r\n                disable={element.disable}\r\n                clickedCard={clickedCardHandler}\r\n                onClick={aaa}\r\n            />)) */\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (<div className='board'>\r\n        {boardSorted.map((element) => (\r\n            <Card\r\n                key={element.id}\r\n                id={element.id}\r\n                character={element.character}\r\n                disable={element.disable}\r\n                onClick={()=>{\r\n                    switch (visibleItems.length){\r\n                        case 0: \r\n                        {\r\n                            setVisibleItem([element.id]);\r\n                        }\r\n                            break;\r\n                        case 1:\r\n                        {\r\n                            if (visibleItems[0] != element.id) {\r\n                                setVisibleItem(visibleItems.concat(element.id));\r\n                                compareCards(visibleItems[0], element.id);\r\n                            }\r\n                            \r\n                        }\r\n                            break;\r\n                        case 2:\r\n                        {\r\n                            setVisibleItem([element.id]);\r\n                        }\r\n                            break;\r\n                        default:\r\n                            setVisibleItem(([]));\r\n                    }\r\n                    \r\n                }}\r\n                /* imgSource = {SetSrc(element.character)} */\r\n            />))}\r\n        <Counter score={counter}></Counter>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default CardsBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}