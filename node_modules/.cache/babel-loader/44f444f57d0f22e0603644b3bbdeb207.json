{"ast":null,"code":"function getRandomCardsOrder(origArray, numberOfCards) {\n  var newArray = [];\n  var count = 0;\n  var card = '';\n  for (var i = 0; i < numberOfCards; i++) {\n    count = 0;\n    while (count == 0 || count > 2) {\n      card = getRandomInt(numberOfCards / 2);\n      count = check(newArray, numberOfCards, origArray[card]);\n    }\n    newArray.push(origArray[card]);\n    console.log(newArray[i] + ' count: ' + count);\n  }\n  return newArray;\n}\nexport default getRandomCardsOrder;","map":{"version":3,"names":["getRandomCardsOrder","origArray","numberOfCards","newArray","count","card","i","getRandomInt","check","push","console","log"],"sources":["D:/Dokumenty/JS/JS/odc5_gra/react-complete-guide/src/cards/getRandomCardsOrder.js"],"sourcesContent":["function getRandomCardsOrder(origArray, numberOfCards)\r\n{\r\n    var newArray = [];\r\n    var count = 0;\r\n    var card = '';\r\n\r\n    for (var i=0; i<(numberOfCards); i++)\r\n    {\r\n        count = 0;\r\n        while (count==0 || count>2)\r\n        {\r\n            card = getRandomInt(numberOfCards/2);\r\n            count = check(newArray, numberOfCards, origArray[card]);\r\n        }        \r\n        \r\n        newArray.push(origArray[card]);\r\n        console.log(newArray[i]+' count: '+count);\r\n        \r\n    }\r\n    return newArray;\r\n}\r\n\r\nexport default getRandomCardsOrder;"],"mappings":"AAAA,SAASA,mBAAmB,CAACC,SAAS,EAAEC,aAAa,EACrD;EACI,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,IAAI,GAAG,EAAE;EAEb,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAEJ,aAAc,EAAEI,CAAC,EAAE,EACpC;IACIF,KAAK,GAAG,CAAC;IACT,OAAOA,KAAK,IAAE,CAAC,IAAIA,KAAK,GAAC,CAAC,EAC1B;MACIC,IAAI,GAAGE,YAAY,CAACL,aAAa,GAAC,CAAC,CAAC;MACpCE,KAAK,GAAGI,KAAK,CAACL,QAAQ,EAAED,aAAa,EAAED,SAAS,CAACI,IAAI,CAAC,CAAC;IAC3D;IAEAF,QAAQ,CAACM,IAAI,CAACR,SAAS,CAACI,IAAI,CAAC,CAAC;IAC9BK,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACG,CAAC,CAAC,GAAC,UAAU,GAACF,KAAK,CAAC;EAE7C;EACA,OAAOD,QAAQ;AACnB;AAEA,eAAeH,mBAAmB"},"metadata":{},"sourceType":"module"}